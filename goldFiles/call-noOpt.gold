Forward directional warnings:
Warning: Z3 expression is a fallacy: DLocal (Var (Just IntegerT) a (Just (ConstE (IntegerV 2))) (line 11, column 11)) (line 11, column 3)

#include <assert.h>
#include <cstring>
 
using namespace std;
 
// Global variables defining starting state
unsigned int l = 2;
unsigned int b[1] = {0};
 
void g_forward(unsigned int &a, unsigned int (& k)[1], const unsigned int c);
void g_reverse(unsigned int &a, unsigned int (& k)[1], const unsigned int c);
 
 
void g_forward(unsigned int &a, unsigned int (& k)[1], const unsigned int c)
{
    a += (((2) - (c)) + (l)) + (2);
}
 
void g_reverse(unsigned int &a, unsigned int (& k)[1], const unsigned int c)
{
    a -= (((2) - (c)) + (l)) + (2);
}
 
int main()
{
    
    
    unsigned int a = 0;
    g_forward(a, b, 2);
    assert(a == 2);
}
