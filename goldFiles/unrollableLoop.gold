
#include <assert.h>
#include <cstring>
 
using namespace std;
 
// Global variables defining starting state
unsigned int x1 = 0;
unsigned int x2 = 0;
 
void fib_forward(unsigned int &x1, unsigned int &x2, const unsigned int n);
void fib_reverse(unsigned int &x1, unsigned int &x2, const unsigned int n);
 
 
void fib_forward(unsigned int &x1, unsigned int &x2, const unsigned int n)
{
    x1 += 1;
    x2 += 1;
    unsigned int i = 2;
    while(i != (n) - (1))
    {
        unsigned int tmp = x2;
        x2 += (x1) + (x2);
        x2 ^= x1 x1 ^= x2 x2 ^= x1
        assert(tmp == x2);
        i += 1;
        assert(!(i == 2));
    }
    unsigned int haps = x1;
    
    unsigned int fabs = n;
    fabs += x2;
    
}
 
void fib_reverse(unsigned int &x1, unsigned int &x2, const unsigned int n)
{
    unsigned int fabs = (x2) + (n);
    fabs -= x2;
    
    unsigned int haps = x1;
    
    unsigned int i = (n) - (1);
    while(i != 2)
    {
        i -= 1;
        unsigned int tmp = x2;
        x2 ^= x1 x1 ^= x2 x2 ^= x1
        x2 -= (x1) + (x2);
        assert(tmp == x2);
        assert(!(i == (n) - (1)));
    }
    x2 -= 1;
    x1 -= 1;
}
 
int main()
{
    
    
    unsigned int a = 0;
    
    fib_forward(x1, x2, 4);
}
